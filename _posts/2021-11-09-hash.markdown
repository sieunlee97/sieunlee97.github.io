---
title: Hash
categories:
- 자료구조
last_modified_at: 2021-11-09T14:00:00+09:00
toc: true
---

## 해시? 해시테이블?
### 해시테이블
해시함수를 사용하여 키를 해시값으로 매핑하고, 이 해시값을 색인 또는 주소 삼아 데이터를 key와 함께 저장하는 자료구조이다. 단순하게 key-value로 이루어진 자료구조라고 생각하면 된다.

### Hash Function
자료구조를 배우는 이유는 원하는 값을 최대한 효율적으로 찾을 수 있게 하기 위해서 여러가지 저장구조를 배우는 것이다. 데이터를 최대한 빠르게 찾기 위해서는 저장하는 위치도 잘 생각해서 저장해야 한다.<br>
해시함수의 정의는 key를 **고정된 길이**의 hash로 변경해주는 역할을 한다. 이 과정을 hashing이라고 한다. **key를 해시함수라는 함수에 input으로 넣어서 output으로 나오는 것이 hash**라고 생각하면 되고, 이 hash가 저장위치가 된다고 생각하면 된다. 즉, **Hash Function은 key로 해시를 만들어내는 함수**이다.

### Hash Table 구성
- key
고유한 값, hash function의 input이 된다. <br>
key 값을 그대로 저장소의 색인으로 사용할 경우 key의 길이만큼의 정보를 저장하는 공간도 따로 마련해야하기 때문에(key의 길이가 제각각일 수 있다.) 고정된 길이의 해시로 변경한다.
- hash function
key를 고정된 길이의 hash로 변경해주는 역할을 한다. <br>
서로 다른 key가 hashing 후 같은 hash값이 나오는 경우가 있다. 이를 해시충돌이라고 부른다. 해시 충돌 발생 확률이 적을수록 좋다.<br>
해시충돌이 균등하게 발생하도록 하는 것도 중요하다. 모든 키가 같은 해시값이 나오게 되면 데이터 저장 시 비효율성도 커지고 보안이 취약해져서 좋지 않다.
- value
저장소(버킷, 슬롯)에 최종적으로 저장되는 값으로, hash와 매칭되어 저장되어진다. 
- hash table
해시함수를 사용하여 키를 해시값으로 매핑하고, 이 해시값을 주소 또는 색인 삼아 데이터(value)를 key와 함께 저장하는 자료구조이다. <br>
데이터가 저장되는 곳을 버킷, 슬롯이라고 한다.

<div>
해시는 색인 또는 인덱스, hash function은 key->hash로 만들어 주는 함수, 해시테이블은 hash를 주소로 삼아 데이터를 저장하는 자료구조이다.
</div>
{: .notice--info}


## Java에서 사용하는 Hash
HashTable이란 jdk 1.0부터 있던 java의 API이고, HashMap은 java2에서 처음 선보인 Java Collection Framework에 속한 API이다.
HashTable 또한 Map 인터페이스를 구현하고 있기 때문에 HashMap과 HashTable이 제공하는 기능은 같다.
